<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<security:http pattern="/resources/**" 					security="none" />
	
	<security:http auto-config="true">
		<security:csrf disabled="true"/>
		<security:intercept-url pattern="/" 				access="permitAll" />
		<security:intercept-url pattern="/login" 			access="permitAll" />
		<security:intercept-url pattern="/test" 			access="permitAll" />
		<security:intercept-url pattern="/loginDuplicate" 	access="permitAll" />
		<security:intercept-url pattern="/registProcess" 	access="permitAll" />
		<security:intercept-url pattern="/test/**" 			access="hasAnyRole('ROLE_USER')" />
		<security:intercept-url pattern="/main/**" 			access="hasAnyRole('ROLE_ADMIN')" />
		
		
		
 		<!-- <security:form-login>
		 		login-page 							로그인 페이지 주소를 지정
		 		username-parameter 					로그인 페이지 form에 있는 username을 저장한 변수이름 지정
		 		password-parameter 					로그인 페이지 form에 있는 password을 저장한 변수이름 지정 
		 		login-processing-url 				로그인 페이지 form action에 입력할 주소 지정
		 		default-target-url 					로그인 성공인 경우 호출할 주소 지정
		 		authentication-failure-url 			로그인 실패인 경우 호출할 주소 지정 			
		 		always-use-default-target			로그인 성공후에 default-target-url에 설정한 곳으로 갈지 말지 설정	
		 		authentication-success-handler-ref 	인증 성공 후 실행할 프로세스 (사용할 경우 default-target-url 속성 무시)
		 		authentication-failure-handler-ref 	인증 실패 후 실행할 프로세스 (사용할 경우authentication-failure-url 속성 무시) -->
		<security:form-login login-page="/login" 
					login-processing-url="/j_spring_security_check"
					username-parameter="username"
					password-parameter="password"
					always-use-default-target="true"
					default-target-url="/main"
					authentication-failure-url="/loginFail"
					authentication-success-handler-ref="userLoginSuccessHandler"
					authentication-failure-handler-ref="userLoginFailureHandler"/>

		<!-- <security:logout> 
				logout-url  		로그아웃이 요청될 url (이 주소로 요청이 들어오면 security에서 알아서 logout시켜준다)​
				logout-success-url	로그아웃이 성공 후 이동할 주소
				​delete-cookies		쿠키 삭제 여부
				​invalidate-session	세션 제거 여부		 -->
		<security:logout logout-url="/j_spring_security_logout" logout-success-url="/logout" invalidate-session="true"/>
		
		<security:session-management>			
		 <!-- <security:concurrency-control>
		 		max-sessions 중복 로그인 가능한 세션 수 / 1로 지정해야, 중복 로그인을 방지할 수 있다.
			 	expired-url  중복 로그인이 발생하면 먼저 로그인한 세션이 끊어지게 되며, 세션이 끊어진 상태에서 모든 url을 호출할 경우에 끊어진 원인을 알려줄 주소를 지정  -->
			<security:concurrency-control max-sessions="1" expired-url="/loginDuplicate"/>
		</security:session-management>
		
		<!-- 403 에러 페이지 처리 -->
		<security:access-denied-handler error-page="/denied"/>
	</security:http>
	
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="loginService">
			<security:password-encoder ref="bcryptPasswordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>
	
	<bean id="loginService" 			class="com.ex.customer.service.impl.LoginServiceImpl"/>
	<bean id="userLoginSuccessHandler" 	class="com.ex.common.UserLoginSuccessHandler" />
	<bean id="userLoginFailureHandler" 	class="com.ex.common.UserLoginFailureHandler" />
	
	<!-- password 암호화를 위한 bean 객체 생성 --> 
	<bean id="bcryptPasswordEncoder" 		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
</beans>
